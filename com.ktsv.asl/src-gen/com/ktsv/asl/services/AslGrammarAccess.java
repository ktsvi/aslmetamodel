/*
 * generated by Xtext 2.25.0
 */
package com.ktsv.asl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class AslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ABModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.ABModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cABModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cModelNameKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cModelNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cModelNameEStringParserRuleCall_2_1_0 = (RuleCall)cModelNameAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cKeywordsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cKeywordsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cKeywordsEStringParserRuleCall_4_1_0 = (RuleCall)cKeywordsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAuthorKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAuthorAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAuthorEStringParserRuleCall_5_1_0 = (RuleCall)cAuthorAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCreateOnKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cCreateOnAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cCreateOnEDateParserRuleCall_6_1_0 = (RuleCall)cCreateOnAssignment_6_1.eContents().get(0);
		private final Keyword cContainsGKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cContainsGAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cContainsGGlobalBlockParserRuleCall_8_0 = (RuleCall)cContainsGAssignment_8.eContents().get(0);
		private final Keyword cContainsSKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cContainsSAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cContainsSAgentBlockParserRuleCall_11_0 = (RuleCall)cContainsSAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cCommaKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cContainsSAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cContainsSAgentBlockParserRuleCall_12_1_0 = (RuleCall)cContainsSAssignment_12_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cContainsEKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cLeftCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cContainsEAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cContainsEExperimentBlockParserRuleCall_16_0 = (RuleCall)cContainsEAssignment_16.eContents().get(0);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final Keyword cCommaKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Assignment cContainsEAssignment_17_1 = (Assignment)cGroup_17.eContents().get(1);
		private final RuleCall cContainsEExperimentBlockParserRuleCall_17_1_0 = (RuleCall)cContainsEAssignment_17_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		
		//ABModel returns ABModel:
		//    'ABModel'
		//    '{'
		//        ('modelName' modelName=EString)?
		//        ('description' description=EString)?
		//        ('keywords' keywords=EString)?
		//        ('author' author=EString)?
		//        ('createOn' createOn=EDate)?
		//        'containsG' containsG=GlobalBlock
		//        'containsS' '{' containsS+=AgentBlock ( "," containsS+=AgentBlock)* '}'
		//        'containsE' '{' containsE+=ExperimentBlock ( "," containsE+=ExperimentBlock)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ABModel'
		//'{'
		//    ('modelName' modelName=EString)?
		//    ('description' description=EString)?
		//    ('keywords' keywords=EString)?
		//    ('author' author=EString)?
		//    ('createOn' createOn=EDate)?
		//    'containsG' containsG=GlobalBlock
		//    'containsS' '{' containsS+=AgentBlock ( "," containsS+=AgentBlock)* '}'
		//    'containsE' '{' containsE+=ExperimentBlock ( "," containsE+=ExperimentBlock)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ABModel'
		public Keyword getABModelKeyword_0() { return cABModelKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('modelName' modelName=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'modelName'
		public Keyword getModelNameKeyword_2_0() { return cModelNameKeyword_2_0; }
		
		//modelName=EString
		public Assignment getModelNameAssignment_2_1() { return cModelNameAssignment_2_1; }
		
		//EString
		public RuleCall getModelNameEStringParserRuleCall_2_1_0() { return cModelNameEStringParserRuleCall_2_1_0; }
		
		//('description' description=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'description'
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_3_1_0() { return cDescriptionEStringParserRuleCall_3_1_0; }
		
		//('keywords' keywords=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'keywords'
		public Keyword getKeywordsKeyword_4_0() { return cKeywordsKeyword_4_0; }
		
		//keywords=EString
		public Assignment getKeywordsAssignment_4_1() { return cKeywordsAssignment_4_1; }
		
		//EString
		public RuleCall getKeywordsEStringParserRuleCall_4_1_0() { return cKeywordsEStringParserRuleCall_4_1_0; }
		
		//('author' author=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'author'
		public Keyword getAuthorKeyword_5_0() { return cAuthorKeyword_5_0; }
		
		//author=EString
		public Assignment getAuthorAssignment_5_1() { return cAuthorAssignment_5_1; }
		
		//EString
		public RuleCall getAuthorEStringParserRuleCall_5_1_0() { return cAuthorEStringParserRuleCall_5_1_0; }
		
		//('createOn' createOn=EDate)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'createOn'
		public Keyword getCreateOnKeyword_6_0() { return cCreateOnKeyword_6_0; }
		
		//createOn=EDate
		public Assignment getCreateOnAssignment_6_1() { return cCreateOnAssignment_6_1; }
		
		//EDate
		public RuleCall getCreateOnEDateParserRuleCall_6_1_0() { return cCreateOnEDateParserRuleCall_6_1_0; }
		
		//'containsG'
		public Keyword getContainsGKeyword_7() { return cContainsGKeyword_7; }
		
		//containsG=GlobalBlock
		public Assignment getContainsGAssignment_8() { return cContainsGAssignment_8; }
		
		//GlobalBlock
		public RuleCall getContainsGGlobalBlockParserRuleCall_8_0() { return cContainsGGlobalBlockParserRuleCall_8_0; }
		
		//'containsS'
		public Keyword getContainsSKeyword_9() { return cContainsSKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//containsS+=AgentBlock
		public Assignment getContainsSAssignment_11() { return cContainsSAssignment_11; }
		
		//AgentBlock
		public RuleCall getContainsSAgentBlockParserRuleCall_11_0() { return cContainsSAgentBlockParserRuleCall_11_0; }
		
		//( "," containsS+=AgentBlock)*
		public Group getGroup_12() { return cGroup_12; }
		
		//","
		public Keyword getCommaKeyword_12_0() { return cCommaKeyword_12_0; }
		
		//containsS+=AgentBlock
		public Assignment getContainsSAssignment_12_1() { return cContainsSAssignment_12_1; }
		
		//AgentBlock
		public RuleCall getContainsSAgentBlockParserRuleCall_12_1_0() { return cContainsSAgentBlockParserRuleCall_12_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
		
		//'containsE'
		public Keyword getContainsEKeyword_14() { return cContainsEKeyword_14; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_15() { return cLeftCurlyBracketKeyword_15; }
		
		//containsE+=ExperimentBlock
		public Assignment getContainsEAssignment_16() { return cContainsEAssignment_16; }
		
		//ExperimentBlock
		public RuleCall getContainsEExperimentBlockParserRuleCall_16_0() { return cContainsEExperimentBlockParserRuleCall_16_0; }
		
		//( "," containsE+=ExperimentBlock)*
		public Group getGroup_17() { return cGroup_17; }
		
		//","
		public Keyword getCommaKeyword_17_0() { return cCommaKeyword_17_0; }
		
		//containsE+=ExperimentBlock
		public Assignment getContainsEAssignment_17_1() { return cContainsEAssignment_17_1; }
		
		//ExperimentBlock
		public RuleCall getContainsEExperimentBlockParserRuleCall_17_1_0() { return cContainsEExperimentBlockParserRuleCall_17_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_18() { return cRightCurlyBracketKeyword_18; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
	}
	public class SpatialEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.SpatialEntity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSpatialEntity_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPolygonParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLineParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPointParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//SpatialEntity returns SpatialEntity:
		//    SpatialEntity_Impl | Polygon | Line | Point;
		@Override public ParserRule getRule() { return rule; }
		
		//SpatialEntity_Impl | Polygon | Line | Point
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SpatialEntity_Impl
		public RuleCall getSpatialEntity_ImplParserRuleCall_0() { return cSpatialEntity_ImplParserRuleCall_0; }
		
		//Polygon
		public RuleCall getPolygonParserRuleCall_1() { return cPolygonParserRuleCall_1; }
		
		//Line
		public RuleCall getLineParserRuleCall_2() { return cLineParserRuleCall_2; }
		
		//Point
		public RuleCall getPointParserRuleCall_3() { return cPointParserRuleCall_3; }
	}
	public class PlanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.Plan");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPlan_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSimplePlanParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cReflexParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cComplexePlanParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Plan returns Plan:
		//    Plan_Impl | simplePlan | Reflex | ComplexePlan;
		@Override public ParserRule getRule() { return rule; }
		
		//Plan_Impl | simplePlan | Reflex | ComplexePlan
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Plan_Impl
		public RuleCall getPlan_ImplParserRuleCall_0() { return cPlan_ImplParserRuleCall_0; }
		
		//simplePlan
		public RuleCall getSimplePlanParserRuleCall_1() { return cSimplePlanParserRuleCall_1; }
		
		//Reflex
		public RuleCall getReflexParserRuleCall_2() { return cReflexParserRuleCall_2; }
		
		//ComplexePlan
		public RuleCall getComplexePlanParserRuleCall_3() { return cComplexePlanParserRuleCall_3; }
	}
	public class GlobalBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.GlobalBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInitAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cInitInitKeyword_0_0 = (Keyword)cInitAssignment_0.eContents().get(0);
		private final Keyword cGlobalBlockKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIdAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIdEIntParserRuleCall_3_1_0 = (RuleCall)cIdAssignment_3_1.eContents().get(0);
		private final Keyword cContainsGlKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cContainsGlAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cContainsGlGlobalVariableParserRuleCall_6_0 = (RuleCall)cContainsGlAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cContainsGlAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cContainsGlGlobalVariableParserRuleCall_7_1_0 = (RuleCall)cContainsGlAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cContainsSEKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cContainsSEAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cContainsSESpatialEntityParserRuleCall_11_0 = (RuleCall)cContainsSEAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cCommaKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cContainsSEAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cContainsSESpatialEntityParserRuleCall_12_1_0 = (RuleCall)cContainsSEAssignment_12_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//GlobalBlock returns GlobalBlock:
		//    (init?='init')?
		//    'GlobalBlock'
		//    '{'
		//        ('id' id=EInt)?
		//        'containsGl' '{' containsGl+=GlobalVariable ( "," containsGl+=GlobalVariable)* '}'
		//        'containsSE' '{' containsSE+=SpatialEntity ( "," containsSE+=SpatialEntity)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//(init?='init')?
		//'GlobalBlock'
		//'{'
		//    ('id' id=EInt)?
		//    'containsGl' '{' containsGl+=GlobalVariable ( "," containsGl+=GlobalVariable)* '}'
		//    'containsSE' '{' containsSE+=SpatialEntity ( "," containsSE+=SpatialEntity)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//(init?='init')?
		public Assignment getInitAssignment_0() { return cInitAssignment_0; }
		
		//'init'
		public Keyword getInitInitKeyword_0_0() { return cInitInitKeyword_0_0; }
		
		//'GlobalBlock'
		public Keyword getGlobalBlockKeyword_1() { return cGlobalBlockKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('id' id=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'id'
		public Keyword getIdKeyword_3_0() { return cIdKeyword_3_0; }
		
		//id=EInt
		public Assignment getIdAssignment_3_1() { return cIdAssignment_3_1; }
		
		//EInt
		public RuleCall getIdEIntParserRuleCall_3_1_0() { return cIdEIntParserRuleCall_3_1_0; }
		
		//'containsGl'
		public Keyword getContainsGlKeyword_4() { return cContainsGlKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//containsGl+=GlobalVariable
		public Assignment getContainsGlAssignment_6() { return cContainsGlAssignment_6; }
		
		//GlobalVariable
		public RuleCall getContainsGlGlobalVariableParserRuleCall_6_0() { return cContainsGlGlobalVariableParserRuleCall_6_0; }
		
		//( "," containsGl+=GlobalVariable)*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//containsGl+=GlobalVariable
		public Assignment getContainsGlAssignment_7_1() { return cContainsGlAssignment_7_1; }
		
		//GlobalVariable
		public RuleCall getContainsGlGlobalVariableParserRuleCall_7_1_0() { return cContainsGlGlobalVariableParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'containsSE'
		public Keyword getContainsSEKeyword_9() { return cContainsSEKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//containsSE+=SpatialEntity
		public Assignment getContainsSEAssignment_11() { return cContainsSEAssignment_11; }
		
		//SpatialEntity
		public RuleCall getContainsSESpatialEntityParserRuleCall_11_0() { return cContainsSESpatialEntityParserRuleCall_11_0; }
		
		//( "," containsSE+=SpatialEntity)*
		public Group getGroup_12() { return cGroup_12; }
		
		//","
		public Keyword getCommaKeyword_12_0() { return cCommaKeyword_12_0; }
		
		//containsSE+=SpatialEntity
		public Assignment getContainsSEAssignment_12_1() { return cContainsSEAssignment_12_1; }
		
		//SpatialEntity
		public RuleCall getContainsSESpatialEntityParserRuleCall_12_1_0() { return cContainsSESpatialEntityParserRuleCall_12_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}
	public class AgentBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.AgentBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInitAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cInitInitKeyword_0_0 = (Keyword)cInitAssignment_0.eContents().get(0);
		private final Assignment cAspectFunctionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAspectFunctionAspectFunctionKeyword_1_0 = (Keyword)cAspectFunctionAssignment_1.eContents().get(0);
		private final Keyword cAgentBlockKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNameAgentKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNameAgentAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNameAgentEStringParserRuleCall_4_1_0 = (RuleCall)cNameAgentAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAspectNameKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAspectNameAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAspectNameEStringParserRuleCall_5_1_0 = (RuleCall)cAspectNameAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cColorKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cColorAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cColorEStringParserRuleCall_6_1_0 = (RuleCall)cColorAssignment_6_1.eContents().get(0);
		private final Keyword cHasPKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cHasPAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cHasPPlanParserRuleCall_9_0 = (RuleCall)cHasPAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cHasPAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cHasPPlanParserRuleCall_10_1_0 = (RuleCall)cHasPAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cHasPrKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cHasPrAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cHasPrPropertyParserRuleCall_14_0 = (RuleCall)cHasPrAssignment_14.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cCommaKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cHasPrAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cHasPrPropertyParserRuleCall_15_1_0 = (RuleCall)cHasPrAssignment_15_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//AgentBlock returns AgentBlock:
		//    (init?='init')?
		//    (aspectFunction?='aspectFunction')?
		//    'AgentBlock'
		//    '{'
		//        ('nameAgent' nameAgent=EString)?
		//        ('aspectName' aspectName=EString)?
		//        ('color' color=EString)?
		//        'hasP' '{' hasP+=Plan ( "," hasP+=Plan)* '}'
		//        'hasPr' '{' hasPr+=Property ( "," hasPr+=Property)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//(init?='init')?
		//(aspectFunction?='aspectFunction')?
		//'AgentBlock'
		//'{'
		//    ('nameAgent' nameAgent=EString)?
		//    ('aspectName' aspectName=EString)?
		//    ('color' color=EString)?
		//    'hasP' '{' hasP+=Plan ( "," hasP+=Plan)* '}'
		//    'hasPr' '{' hasPr+=Property ( "," hasPr+=Property)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//(init?='init')?
		public Assignment getInitAssignment_0() { return cInitAssignment_0; }
		
		//'init'
		public Keyword getInitInitKeyword_0_0() { return cInitInitKeyword_0_0; }
		
		//(aspectFunction?='aspectFunction')?
		public Assignment getAspectFunctionAssignment_1() { return cAspectFunctionAssignment_1; }
		
		//'aspectFunction'
		public Keyword getAspectFunctionAspectFunctionKeyword_1_0() { return cAspectFunctionAspectFunctionKeyword_1_0; }
		
		//'AgentBlock'
		public Keyword getAgentBlockKeyword_2() { return cAgentBlockKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('nameAgent' nameAgent=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'nameAgent'
		public Keyword getNameAgentKeyword_4_0() { return cNameAgentKeyword_4_0; }
		
		//nameAgent=EString
		public Assignment getNameAgentAssignment_4_1() { return cNameAgentAssignment_4_1; }
		
		//EString
		public RuleCall getNameAgentEStringParserRuleCall_4_1_0() { return cNameAgentEStringParserRuleCall_4_1_0; }
		
		//('aspectName' aspectName=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'aspectName'
		public Keyword getAspectNameKeyword_5_0() { return cAspectNameKeyword_5_0; }
		
		//aspectName=EString
		public Assignment getAspectNameAssignment_5_1() { return cAspectNameAssignment_5_1; }
		
		//EString
		public RuleCall getAspectNameEStringParserRuleCall_5_1_0() { return cAspectNameEStringParserRuleCall_5_1_0; }
		
		//('color' color=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'color'
		public Keyword getColorKeyword_6_0() { return cColorKeyword_6_0; }
		
		//color=EString
		public Assignment getColorAssignment_6_1() { return cColorAssignment_6_1; }
		
		//EString
		public RuleCall getColorEStringParserRuleCall_6_1_0() { return cColorEStringParserRuleCall_6_1_0; }
		
		//'hasP'
		public Keyword getHasPKeyword_7() { return cHasPKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//hasP+=Plan
		public Assignment getHasPAssignment_9() { return cHasPAssignment_9; }
		
		//Plan
		public RuleCall getHasPPlanParserRuleCall_9_0() { return cHasPPlanParserRuleCall_9_0; }
		
		//( "," hasP+=Plan)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//hasP+=Plan
		public Assignment getHasPAssignment_10_1() { return cHasPAssignment_10_1; }
		
		//Plan
		public RuleCall getHasPPlanParserRuleCall_10_1_0() { return cHasPPlanParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'hasPr'
		public Keyword getHasPrKeyword_12() { return cHasPrKeyword_12; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13() { return cLeftCurlyBracketKeyword_13; }
		
		//hasPr+=Property
		public Assignment getHasPrAssignment_14() { return cHasPrAssignment_14; }
		
		//Property
		public RuleCall getHasPrPropertyParserRuleCall_14_0() { return cHasPrPropertyParserRuleCall_14_0; }
		
		//( "," hasPr+=Property)*
		public Group getGroup_15() { return cGroup_15; }
		
		//","
		public Keyword getCommaKeyword_15_0() { return cCommaKeyword_15_0; }
		
		//hasPr+=Property
		public Assignment getHasPrAssignment_15_1() { return cHasPrAssignment_15_1; }
		
		//Property
		public RuleCall getHasPrPropertyParserRuleCall_15_1_0() { return cHasPrPropertyParserRuleCall_15_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}
	public class ExperimentBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.ExperimentBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExperimentBlockKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeEStringParserRuleCall_2_1_0 = (RuleCall)cTypeAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExpNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cExpNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cExpNameEStringParserRuleCall_3_1_0 = (RuleCall)cExpNameAssignment_3_1.eContents().get(0);
		private final Keyword cHasPaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cHasPaAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cHasPaParameterParserRuleCall_6_0 = (RuleCall)cHasPaAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cHasPaAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cHasPaParameterParserRuleCall_7_1_0 = (RuleCall)cHasPaAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cOutputKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cOutputAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cOutputOutputParserRuleCall_11_0 = (RuleCall)cOutputAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cCommaKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cOutputAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cOutputOutputParserRuleCall_12_1_0 = (RuleCall)cOutputAssignment_12_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//ExperimentBlock returns ExperimentBlock:
		//    'ExperimentBlock'
		//    '{'
		//        ('type' type=EString)?
		//        ('expName' expName=EString)?
		//        'hasPa' '{' hasPa+=Parameter ( "," hasPa+=Parameter)* '}'
		//        'output' '{' output+=Output ( "," output+=Output)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ExperimentBlock'
		//'{'
		//    ('type' type=EString)?
		//    ('expName' expName=EString)?
		//    'hasPa' '{' hasPa+=Parameter ( "," hasPa+=Parameter)* '}'
		//    'output' '{' output+=Output ( "," output+=Output)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ExperimentBlock'
		public Keyword getExperimentBlockKeyword_0() { return cExperimentBlockKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('type' type=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'type'
		public Keyword getTypeKeyword_2_0() { return cTypeKeyword_2_0; }
		
		//type=EString
		public Assignment getTypeAssignment_2_1() { return cTypeAssignment_2_1; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_2_1_0() { return cTypeEStringParserRuleCall_2_1_0; }
		
		//('expName' expName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'expName'
		public Keyword getExpNameKeyword_3_0() { return cExpNameKeyword_3_0; }
		
		//expName=EString
		public Assignment getExpNameAssignment_3_1() { return cExpNameAssignment_3_1; }
		
		//EString
		public RuleCall getExpNameEStringParserRuleCall_3_1_0() { return cExpNameEStringParserRuleCall_3_1_0; }
		
		//'hasPa'
		public Keyword getHasPaKeyword_4() { return cHasPaKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//hasPa+=Parameter
		public Assignment getHasPaAssignment_6() { return cHasPaAssignment_6; }
		
		//Parameter
		public RuleCall getHasPaParameterParserRuleCall_6_0() { return cHasPaParameterParserRuleCall_6_0; }
		
		//( "," hasPa+=Parameter)*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//hasPa+=Parameter
		public Assignment getHasPaAssignment_7_1() { return cHasPaAssignment_7_1; }
		
		//Parameter
		public RuleCall getHasPaParameterParserRuleCall_7_1_0() { return cHasPaParameterParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'output'
		public Keyword getOutputKeyword_9() { return cOutputKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//output+=Output
		public Assignment getOutputAssignment_11() { return cOutputAssignment_11; }
		
		//Output
		public RuleCall getOutputOutputParserRuleCall_11_0() { return cOutputOutputParserRuleCall_11_0; }
		
		//( "," output+=Output)*
		public Group getGroup_12() { return cGroup_12; }
		
		//","
		public Keyword getCommaKeyword_12_0() { return cCommaKeyword_12_0; }
		
		//output+=Output
		public Assignment getOutputAssignment_12_1() { return cOutputAssignment_12_1; }
		
		//Output
		public RuleCall getOutputOutputParserRuleCall_12_1_0() { return cOutputOutputParserRuleCall_12_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.EDate");
		private final Keyword cEDateKeyword = (Keyword)rule.eContents().get(1);
		
		//EDate returns ecore::EDate:
		//    'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;
		@Override public ParserRule getRule() { return rule; }
		
		//'EDate'
		public Keyword getEDateKeyword() { return cEDateKeyword; }
	}
	public class GlobalVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.GlobalVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGlobalVariableAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cInitAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cInitInitKeyword_1_0 = (Keyword)cInitAssignment_1.eContents().get(0);
		private final Keyword cGlobalVariableKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cGvarNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGvarNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGvarNameEStringParserRuleCall_4_1_0 = (RuleCall)cGvarNameAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTypeEStringParserRuleCall_5_1_0 = (RuleCall)cTypeAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cInitValueKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cInitValueAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cInitValueEStringParserRuleCall_6_1_0 = (RuleCall)cInitValueAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//GlobalVariable returns GlobalVariable:
		//    {GlobalVariable}
		//    (init?='init')?
		//    'GlobalVariable'
		//    '{'
		//        ('gvarName' gvarName=EString)?
		//        ('type' type=EString)?
		//        ('initValue' initValue=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GlobalVariable}
		//(init?='init')?
		//'GlobalVariable'
		//'{'
		//    ('gvarName' gvarName=EString)?
		//    ('type' type=EString)?
		//    ('initValue' initValue=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{GlobalVariable}
		public Action getGlobalVariableAction_0() { return cGlobalVariableAction_0; }
		
		//(init?='init')?
		public Assignment getInitAssignment_1() { return cInitAssignment_1; }
		
		//'init'
		public Keyword getInitInitKeyword_1_0() { return cInitInitKeyword_1_0; }
		
		//'GlobalVariable'
		public Keyword getGlobalVariableKeyword_2() { return cGlobalVariableKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('gvarName' gvarName=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'gvarName'
		public Keyword getGvarNameKeyword_4_0() { return cGvarNameKeyword_4_0; }
		
		//gvarName=EString
		public Assignment getGvarNameAssignment_4_1() { return cGvarNameAssignment_4_1; }
		
		//EString
		public RuleCall getGvarNameEStringParserRuleCall_4_1_0() { return cGvarNameEStringParserRuleCall_4_1_0; }
		
		//('type' type=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'type'
		public Keyword getTypeKeyword_5_0() { return cTypeKeyword_5_0; }
		
		//type=EString
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_5_1_0() { return cTypeEStringParserRuleCall_5_1_0; }
		
		//('initValue' initValue=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'initValue'
		public Keyword getInitValueKeyword_6_0() { return cInitValueKeyword_6_0; }
		
		//initValue=EString
		public Assignment getInitValueAssignment_6_1() { return cInitValueAssignment_6_1; }
		
		//EString
		public RuleCall getInitValueEStringParserRuleCall_6_1_0() { return cInitValueEStringParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class SpatialEntity_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.SpatialEntity_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSpatialEntityAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSpatialEntityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cShapeNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cShapeNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cShapeNameEStringParserRuleCall_3_1_0 = (RuleCall)cShapeNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cShapePathKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cShapePathAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cShapePathEStringParserRuleCall_4_1_0 = (RuleCall)cShapePathAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTypeEStringParserRuleCall_5_1_0 = (RuleCall)cTypeAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//SpatialEntity_Impl returns SpatialEntity:
		//    {SpatialEntity}
		//    'SpatialEntity'
		//    '{'
		//        ('shapeName' shapeName=EString)?
		//        ('shapePath' shapePath=EString)?
		//        ('type' type=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SpatialEntity}
		//'SpatialEntity'
		//'{'
		//    ('shapeName' shapeName=EString)?
		//    ('shapePath' shapePath=EString)?
		//    ('type' type=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{SpatialEntity}
		public Action getSpatialEntityAction_0() { return cSpatialEntityAction_0; }
		
		//'SpatialEntity'
		public Keyword getSpatialEntityKeyword_1() { return cSpatialEntityKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('shapeName' shapeName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'shapeName'
		public Keyword getShapeNameKeyword_3_0() { return cShapeNameKeyword_3_0; }
		
		//shapeName=EString
		public Assignment getShapeNameAssignment_3_1() { return cShapeNameAssignment_3_1; }
		
		//EString
		public RuleCall getShapeNameEStringParserRuleCall_3_1_0() { return cShapeNameEStringParserRuleCall_3_1_0; }
		
		//('shapePath' shapePath=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'shapePath'
		public Keyword getShapePathKeyword_4_0() { return cShapePathKeyword_4_0; }
		
		//shapePath=EString
		public Assignment getShapePathAssignment_4_1() { return cShapePathAssignment_4_1; }
		
		//EString
		public RuleCall getShapePathEStringParserRuleCall_4_1_0() { return cShapePathEStringParserRuleCall_4_1_0; }
		
		//('type' type=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'type'
		public Keyword getTypeKeyword_5_0() { return cTypeKeyword_5_0; }
		
		//type=EString
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_5_1_0() { return cTypeEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class PolygonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.Polygon");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPolygonAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPolygonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cShapeNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cShapeNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cShapeNameEStringParserRuleCall_3_1_0 = (RuleCall)cShapeNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cShapePathKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cShapePathAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cShapePathEStringParserRuleCall_4_1_0 = (RuleCall)cShapePathAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTypeEStringParserRuleCall_5_1_0 = (RuleCall)cTypeAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Polygon returns Polygon:
		//    {Polygon}
		//    'Polygon'
		//    '{'
		//        ('shapeName' shapeName=EString)?
		//        ('shapePath' shapePath=EString)?
		//        ('type' type=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Polygon}
		//'Polygon'
		//'{'
		//    ('shapeName' shapeName=EString)?
		//    ('shapePath' shapePath=EString)?
		//    ('type' type=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Polygon}
		public Action getPolygonAction_0() { return cPolygonAction_0; }
		
		//'Polygon'
		public Keyword getPolygonKeyword_1() { return cPolygonKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('shapeName' shapeName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'shapeName'
		public Keyword getShapeNameKeyword_3_0() { return cShapeNameKeyword_3_0; }
		
		//shapeName=EString
		public Assignment getShapeNameAssignment_3_1() { return cShapeNameAssignment_3_1; }
		
		//EString
		public RuleCall getShapeNameEStringParserRuleCall_3_1_0() { return cShapeNameEStringParserRuleCall_3_1_0; }
		
		//('shapePath' shapePath=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'shapePath'
		public Keyword getShapePathKeyword_4_0() { return cShapePathKeyword_4_0; }
		
		//shapePath=EString
		public Assignment getShapePathAssignment_4_1() { return cShapePathAssignment_4_1; }
		
		//EString
		public RuleCall getShapePathEStringParserRuleCall_4_1_0() { return cShapePathEStringParserRuleCall_4_1_0; }
		
		//('type' type=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'type'
		public Keyword getTypeKeyword_5_0() { return cTypeKeyword_5_0; }
		
		//type=EString
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_5_1_0() { return cTypeEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class LineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.Line");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLineAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLineKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cShapeNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cShapeNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cShapeNameEStringParserRuleCall_3_1_0 = (RuleCall)cShapeNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cShapePathKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cShapePathAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cShapePathEStringParserRuleCall_4_1_0 = (RuleCall)cShapePathAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTypeEStringParserRuleCall_5_1_0 = (RuleCall)cTypeAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Line returns Line:
		//    {Line}
		//    'Line'
		//    '{'
		//        ('shapeName' shapeName=EString)?
		//        ('shapePath' shapePath=EString)?
		//        ('type' type=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Line}
		//'Line'
		//'{'
		//    ('shapeName' shapeName=EString)?
		//    ('shapePath' shapePath=EString)?
		//    ('type' type=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Line}
		public Action getLineAction_0() { return cLineAction_0; }
		
		//'Line'
		public Keyword getLineKeyword_1() { return cLineKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('shapeName' shapeName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'shapeName'
		public Keyword getShapeNameKeyword_3_0() { return cShapeNameKeyword_3_0; }
		
		//shapeName=EString
		public Assignment getShapeNameAssignment_3_1() { return cShapeNameAssignment_3_1; }
		
		//EString
		public RuleCall getShapeNameEStringParserRuleCall_3_1_0() { return cShapeNameEStringParserRuleCall_3_1_0; }
		
		//('shapePath' shapePath=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'shapePath'
		public Keyword getShapePathKeyword_4_0() { return cShapePathKeyword_4_0; }
		
		//shapePath=EString
		public Assignment getShapePathAssignment_4_1() { return cShapePathAssignment_4_1; }
		
		//EString
		public RuleCall getShapePathEStringParserRuleCall_4_1_0() { return cShapePathEStringParserRuleCall_4_1_0; }
		
		//('type' type=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'type'
		public Keyword getTypeKeyword_5_0() { return cTypeKeyword_5_0; }
		
		//type=EString
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_5_1_0() { return cTypeEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class PointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.Point");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPointAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPointKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cShapeNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cShapeNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cShapeNameEStringParserRuleCall_3_1_0 = (RuleCall)cShapeNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cShapePathKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cShapePathAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cShapePathEStringParserRuleCall_4_1_0 = (RuleCall)cShapePathAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTypeEStringParserRuleCall_5_1_0 = (RuleCall)cTypeAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Point returns Point:
		//    {Point}
		//    'Point'
		//    '{'
		//        ('shapeName' shapeName=EString)?
		//        ('shapePath' shapePath=EString)?
		//        ('type' type=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Point}
		//'Point'
		//'{'
		//    ('shapeName' shapeName=EString)?
		//    ('shapePath' shapePath=EString)?
		//    ('type' type=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Point}
		public Action getPointAction_0() { return cPointAction_0; }
		
		//'Point'
		public Keyword getPointKeyword_1() { return cPointKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('shapeName' shapeName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'shapeName'
		public Keyword getShapeNameKeyword_3_0() { return cShapeNameKeyword_3_0; }
		
		//shapeName=EString
		public Assignment getShapeNameAssignment_3_1() { return cShapeNameAssignment_3_1; }
		
		//EString
		public RuleCall getShapeNameEStringParserRuleCall_3_1_0() { return cShapeNameEStringParserRuleCall_3_1_0; }
		
		//('shapePath' shapePath=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'shapePath'
		public Keyword getShapePathKeyword_4_0() { return cShapePathKeyword_4_0; }
		
		//shapePath=EString
		public Assignment getShapePathAssignment_4_1() { return cShapePathAssignment_4_1; }
		
		//EString
		public RuleCall getShapePathEStringParserRuleCall_4_1_0() { return cShapePathEStringParserRuleCall_4_1_0; }
		
		//('type' type=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'type'
		public Keyword getTypeKeyword_5_0() { return cTypeKeyword_5_0; }
		
		//type=EString
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_5_1_0() { return cTypeEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class Plan_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.Plan_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPlanAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPlanKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPlanNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPlanNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPlanNameEStringParserRuleCall_3_1_0 = (RuleCall)cPlanNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIntentionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIntentionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIntentionEStringParserRuleCall_4_1_0 = (RuleCall)cIntentionAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Plan_Impl returns Plan:
		//    {Plan}
		//    'Plan'
		//    '{'
		//        ('planName' planName=EString)?
		//        ('intention' intention=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Plan}
		//'Plan'
		//'{'
		//    ('planName' planName=EString)?
		//    ('intention' intention=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Plan}
		public Action getPlanAction_0() { return cPlanAction_0; }
		
		//'Plan'
		public Keyword getPlanKeyword_1() { return cPlanKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('planName' planName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'planName'
		public Keyword getPlanNameKeyword_3_0() { return cPlanNameKeyword_3_0; }
		
		//planName=EString
		public Assignment getPlanNameAssignment_3_1() { return cPlanNameAssignment_3_1; }
		
		//EString
		public RuleCall getPlanNameEStringParserRuleCall_3_1_0() { return cPlanNameEStringParserRuleCall_3_1_0; }
		
		//('intention' intention=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'intention'
		public Keyword getIntentionKeyword_4_0() { return cIntentionKeyword_4_0; }
		
		//intention=EString
		public Assignment getIntentionAssignment_4_1() { return cIntentionAssignment_4_1; }
		
		//EString
		public RuleCall getIntentionEStringParserRuleCall_4_1_0() { return cIntentionEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPropertyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPropertyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameofvariableKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameofvariableAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameofvariableEStringParserRuleCall_3_1_0 = (RuleCall)cNameofvariableAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAssociateValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAssociateValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAssociateValueEStringParserRuleCall_4_1_0 = (RuleCall)cAssociateValueAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDefaultTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDefaultTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDefaultTypeEStringParserRuleCall_5_1_0 = (RuleCall)cDefaultTypeAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Property returns Property:
		//    {Property}
		//    'Property'
		//    '{'
		//        ('nameofvariable' nameofvariable=EString)?
		//        ('associateValue' associateValue=EString)?
		//        ('defaultType' defaultType=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Property}
		//'Property'
		//'{'
		//    ('nameofvariable' nameofvariable=EString)?
		//    ('associateValue' associateValue=EString)?
		//    ('defaultType' defaultType=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Property}
		public Action getPropertyAction_0() { return cPropertyAction_0; }
		
		//'Property'
		public Keyword getPropertyKeyword_1() { return cPropertyKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('nameofvariable' nameofvariable=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'nameofvariable'
		public Keyword getNameofvariableKeyword_3_0() { return cNameofvariableKeyword_3_0; }
		
		//nameofvariable=EString
		public Assignment getNameofvariableAssignment_3_1() { return cNameofvariableAssignment_3_1; }
		
		//EString
		public RuleCall getNameofvariableEStringParserRuleCall_3_1_0() { return cNameofvariableEStringParserRuleCall_3_1_0; }
		
		//('associateValue' associateValue=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'associateValue'
		public Keyword getAssociateValueKeyword_4_0() { return cAssociateValueKeyword_4_0; }
		
		//associateValue=EString
		public Assignment getAssociateValueAssignment_4_1() { return cAssociateValueAssignment_4_1; }
		
		//EString
		public RuleCall getAssociateValueEStringParserRuleCall_4_1_0() { return cAssociateValueEStringParserRuleCall_4_1_0; }
		
		//('defaultType' defaultType=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'defaultType'
		public Keyword getDefaultTypeKeyword_5_0() { return cDefaultTypeKeyword_5_0; }
		
		//defaultType=EString
		public Assignment getDefaultTypeAssignment_5_1() { return cDefaultTypeAssignment_5_1; }
		
		//EString
		public RuleCall getDefaultTypeEStringParserRuleCall_5_1_0() { return cDefaultTypeEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class SimplePlanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.simplePlan");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSimplePlanAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSimplePlanKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPlanNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPlanNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPlanNameEStringParserRuleCall_3_1_0 = (RuleCall)cPlanNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cReturnTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cReturnTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cReturnTypeEStringParserRuleCall_4_1_0 = (RuleCall)cReturnTypeAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//simplePlan returns simplePlan:
		//    {simplePlan}
		//    'simplePlan'
		//    '{'
		//        ('planName' planName=EString)?
		//        ('returnType' returnType=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{simplePlan}
		//'simplePlan'
		//'{'
		//    ('planName' planName=EString)?
		//    ('returnType' returnType=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{simplePlan}
		public Action getSimplePlanAction_0() { return cSimplePlanAction_0; }
		
		//'simplePlan'
		public Keyword getSimplePlanKeyword_1() { return cSimplePlanKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('planName' planName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'planName'
		public Keyword getPlanNameKeyword_3_0() { return cPlanNameKeyword_3_0; }
		
		//planName=EString
		public Assignment getPlanNameAssignment_3_1() { return cPlanNameAssignment_3_1; }
		
		//EString
		public RuleCall getPlanNameEStringParserRuleCall_3_1_0() { return cPlanNameEStringParserRuleCall_3_1_0; }
		
		//('returnType' returnType=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'returnType'
		public Keyword getReturnTypeKeyword_4_0() { return cReturnTypeKeyword_4_0; }
		
		//returnType=EString
		public Assignment getReturnTypeAssignment_4_1() { return cReturnTypeAssignment_4_1; }
		
		//EString
		public RuleCall getReturnTypeEStringParserRuleCall_4_1_0() { return cReturnTypeEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ReflexElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.Reflex");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReflexAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExistReflexAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cExistReflexExistReflexKeyword_1_0 = (Keyword)cExistReflexAssignment_1.eContents().get(0);
		private final Assignment cGoalAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cGoalGoalKeyword_2_0 = (Keyword)cGoalAssignment_2.eContents().get(0);
		private final Keyword cReflexKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPlanNameKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPlanNameAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cPlanNameEStringParserRuleCall_5_1_0 = (RuleCall)cPlanNameAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Reflex returns Reflex:
		//    {Reflex}
		//    (existReflex?='existReflex')?
		//    (goal?='goal')?
		//    'Reflex'
		//    '{'
		//        ('planName' planName=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Reflex}
		//(existReflex?='existReflex')?
		//(goal?='goal')?
		//'Reflex'
		//'{'
		//    ('planName' planName=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Reflex}
		public Action getReflexAction_0() { return cReflexAction_0; }
		
		//(existReflex?='existReflex')?
		public Assignment getExistReflexAssignment_1() { return cExistReflexAssignment_1; }
		
		//'existReflex'
		public Keyword getExistReflexExistReflexKeyword_1_0() { return cExistReflexExistReflexKeyword_1_0; }
		
		//(goal?='goal')?
		public Assignment getGoalAssignment_2() { return cGoalAssignment_2; }
		
		//'goal'
		public Keyword getGoalGoalKeyword_2_0() { return cGoalGoalKeyword_2_0; }
		
		//'Reflex'
		public Keyword getReflexKeyword_3() { return cReflexKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('planName' planName=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'planName'
		public Keyword getPlanNameKeyword_5_0() { return cPlanNameKeyword_5_0; }
		
		//planName=EString
		public Assignment getPlanNameAssignment_5_1() { return cPlanNameAssignment_5_1; }
		
		//EString
		public RuleCall getPlanNameEStringParserRuleCall_5_1_0() { return cPlanNameEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ComplexePlanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.ComplexePlan");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComplexePlanAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cComplexePlanKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPlanNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPlanNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPlanNameEStringParserRuleCall_3_1_0 = (RuleCall)cPlanNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cReturnTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cReturnTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cReturnTypeEStringParserRuleCall_4_1_0 = (RuleCall)cReturnTypeAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ComplexePlan returns ComplexePlan:
		//    {ComplexePlan}
		//    'ComplexePlan'
		//    '{'
		//        ('planName' planName=EString)?
		//        ('returnType' returnType=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ComplexePlan}
		//'ComplexePlan'
		//'{'
		//    ('planName' planName=EString)?
		//    ('returnType' returnType=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{ComplexePlan}
		public Action getComplexePlanAction_0() { return cComplexePlanAction_0; }
		
		//'ComplexePlan'
		public Keyword getComplexePlanKeyword_1() { return cComplexePlanKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('planName' planName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'planName'
		public Keyword getPlanNameKeyword_3_0() { return cPlanNameKeyword_3_0; }
		
		//planName=EString
		public Assignment getPlanNameAssignment_3_1() { return cPlanNameAssignment_3_1; }
		
		//EString
		public RuleCall getPlanNameEStringParserRuleCall_3_1_0() { return cPlanNameEStringParserRuleCall_3_1_0; }
		
		//('returnType' returnType=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'returnType'
		public Keyword getReturnTypeKeyword_4_0() { return cReturnTypeKeyword_4_0; }
		
		//returnType=EString
		public Assignment getReturnTypeAssignment_4_1() { return cReturnTypeAssignment_4_1; }
		
		//EString
		public RuleCall getReturnTypeEStringParserRuleCall_4_1_0() { return cReturnTypeEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cParameterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cParamNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cParamNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cParamNameEStringParserRuleCall_3_1_0 = (RuleCall)cParamNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTargetVariableKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTargetVariableAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTargetVariableEStringParserRuleCall_4_1_0 = (RuleCall)cTargetVariableAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Parameter returns Parameter:
		//    {Parameter}
		//    'Parameter'
		//    '{'
		//        ('paramName' paramName=EString)?
		//        ('targetVariable' targetVariable=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Parameter}
		//'Parameter'
		//'{'
		//    ('paramName' paramName=EString)?
		//    ('targetVariable' targetVariable=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Parameter}
		public Action getParameterAction_0() { return cParameterAction_0; }
		
		//'Parameter'
		public Keyword getParameterKeyword_1() { return cParameterKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('paramName' paramName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'paramName'
		public Keyword getParamNameKeyword_3_0() { return cParamNameKeyword_3_0; }
		
		//paramName=EString
		public Assignment getParamNameAssignment_3_1() { return cParamNameAssignment_3_1; }
		
		//EString
		public RuleCall getParamNameEStringParserRuleCall_3_1_0() { return cParamNameEStringParserRuleCall_3_1_0; }
		
		//('targetVariable' targetVariable=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'targetVariable'
		public Keyword getTargetVariableKeyword_4_0() { return cTargetVariableKeyword_4_0; }
		
		//targetVariable=EString
		public Assignment getTargetVariableAssignment_4_1() { return cTargetVariableAssignment_4_1; }
		
		//EString
		public RuleCall getTargetVariableEStringParserRuleCall_4_1_0() { return cTargetVariableEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class OutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.Output");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOutputKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cIdKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cIdAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cIdEIntParserRuleCall_2_1_0 = (RuleCall)cIdAssignment_2_1.eContents().get(0);
		private final Keyword cHasMKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cHasMAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cHasMMonitorCrossReference_5_0 = (CrossReference)cHasMAssignment_5.eContents().get(0);
		private final RuleCall cHasMMonitorEStringParserRuleCall_5_0_1 = (RuleCall)cHasMMonitorCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cHasMAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cHasMMonitorCrossReference_6_1_0 = (CrossReference)cHasMAssignment_6_1.eContents().get(0);
		private final RuleCall cHasMMonitorEStringParserRuleCall_6_1_0_1 = (RuleCall)cHasMMonitorCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cContainsDKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cContainsDAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cContainsDDisplayParserRuleCall_10_0 = (RuleCall)cContainsDAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cContainsDAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cContainsDDisplayParserRuleCall_11_1_0 = (RuleCall)cContainsDAssignment_11_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cHasEFKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cLeftCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cHasEFAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cHasEFExportFileParserRuleCall_15_0 = (RuleCall)cHasEFAssignment_15.eContents().get(0);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cCommaKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cHasEFAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cHasEFExportFileParserRuleCall_16_1_0 = (RuleCall)cHasEFAssignment_16_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cHasIKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cLeftCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Assignment cHasIAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cHasIInspectorParserRuleCall_20_0 = (RuleCall)cHasIAssignment_20.eContents().get(0);
		private final Group cGroup_21 = (Group)cGroup.eContents().get(21);
		private final Keyword cCommaKeyword_21_0 = (Keyword)cGroup_21.eContents().get(0);
		private final Assignment cHasIAssignment_21_1 = (Assignment)cGroup_21.eContents().get(1);
		private final RuleCall cHasIInspectorParserRuleCall_21_1_0 = (RuleCall)cHasIAssignment_21_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Keyword cRightCurlyBracketKeyword_23 = (Keyword)cGroup.eContents().get(23);
		
		//Output returns Output:
		//    'Output'
		//    '{'
		//        ('id' id=EInt)?
		//        'hasM' '(' hasM+=[Monitor|EString] ( "," hasM+=[Monitor|EString])* ')'
		//        'containsD' '{' containsD+=Display ( "," containsD+=Display)* '}'
		//        'hasEF' '{' hasEF+=ExportFile ( "," hasEF+=ExportFile)* '}'
		//        'hasI' '{' hasI+=Inspector ( "," hasI+=Inspector)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Output'
		//'{'
		//    ('id' id=EInt)?
		//    'hasM' '(' hasM+=[Monitor|EString] ( "," hasM+=[Monitor|EString])* ')'
		//    'containsD' '{' containsD+=Display ( "," containsD+=Display)* '}'
		//    'hasEF' '{' hasEF+=ExportFile ( "," hasEF+=ExportFile)* '}'
		//    'hasI' '{' hasI+=Inspector ( "," hasI+=Inspector)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Output'
		public Keyword getOutputKeyword_0() { return cOutputKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('id' id=EInt)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'id'
		public Keyword getIdKeyword_2_0() { return cIdKeyword_2_0; }
		
		//id=EInt
		public Assignment getIdAssignment_2_1() { return cIdAssignment_2_1; }
		
		//EInt
		public RuleCall getIdEIntParserRuleCall_2_1_0() { return cIdEIntParserRuleCall_2_1_0; }
		
		//'hasM'
		public Keyword getHasMKeyword_3() { return cHasMKeyword_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//hasM+=[Monitor|EString]
		public Assignment getHasMAssignment_5() { return cHasMAssignment_5; }
		
		//[Monitor|EString]
		public CrossReference getHasMMonitorCrossReference_5_0() { return cHasMMonitorCrossReference_5_0; }
		
		//EString
		public RuleCall getHasMMonitorEStringParserRuleCall_5_0_1() { return cHasMMonitorEStringParserRuleCall_5_0_1; }
		
		//( "," hasM+=[Monitor|EString])*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//hasM+=[Monitor|EString]
		public Assignment getHasMAssignment_6_1() { return cHasMAssignment_6_1; }
		
		//[Monitor|EString]
		public CrossReference getHasMMonitorCrossReference_6_1_0() { return cHasMMonitorCrossReference_6_1_0; }
		
		//EString
		public RuleCall getHasMMonitorEStringParserRuleCall_6_1_0_1() { return cHasMMonitorEStringParserRuleCall_6_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//'containsD'
		public Keyword getContainsDKeyword_8() { return cContainsDKeyword_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//containsD+=Display
		public Assignment getContainsDAssignment_10() { return cContainsDAssignment_10; }
		
		//Display
		public RuleCall getContainsDDisplayParserRuleCall_10_0() { return cContainsDDisplayParserRuleCall_10_0; }
		
		//( "," containsD+=Display)*
		public Group getGroup_11() { return cGroup_11; }
		
		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }
		
		//containsD+=Display
		public Assignment getContainsDAssignment_11_1() { return cContainsDAssignment_11_1; }
		
		//Display
		public RuleCall getContainsDDisplayParserRuleCall_11_1_0() { return cContainsDDisplayParserRuleCall_11_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'hasEF'
		public Keyword getHasEFKeyword_13() { return cHasEFKeyword_13; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14() { return cLeftCurlyBracketKeyword_14; }
		
		//hasEF+=ExportFile
		public Assignment getHasEFAssignment_15() { return cHasEFAssignment_15; }
		
		//ExportFile
		public RuleCall getHasEFExportFileParserRuleCall_15_0() { return cHasEFExportFileParserRuleCall_15_0; }
		
		//( "," hasEF+=ExportFile)*
		public Group getGroup_16() { return cGroup_16; }
		
		//","
		public Keyword getCommaKeyword_16_0() { return cCommaKeyword_16_0; }
		
		//hasEF+=ExportFile
		public Assignment getHasEFAssignment_16_1() { return cHasEFAssignment_16_1; }
		
		//ExportFile
		public RuleCall getHasEFExportFileParserRuleCall_16_1_0() { return cHasEFExportFileParserRuleCall_16_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
		
		//'hasI'
		public Keyword getHasIKeyword_18() { return cHasIKeyword_18; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_19() { return cLeftCurlyBracketKeyword_19; }
		
		//hasI+=Inspector
		public Assignment getHasIAssignment_20() { return cHasIAssignment_20; }
		
		//Inspector
		public RuleCall getHasIInspectorParserRuleCall_20_0() { return cHasIInspectorParserRuleCall_20_0; }
		
		//( "," hasI+=Inspector)*
		public Group getGroup_21() { return cGroup_21; }
		
		//","
		public Keyword getCommaKeyword_21_0() { return cCommaKeyword_21_0; }
		
		//hasI+=Inspector
		public Assignment getHasIAssignment_21_1() { return cHasIAssignment_21_1; }
		
		//Inspector
		public RuleCall getHasIInspectorParserRuleCall_21_1_0() { return cHasIInspectorParserRuleCall_21_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_22() { return cRightCurlyBracketKeyword_22; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_23() { return cRightCurlyBracketKeyword_23; }
	}
	public class MonitorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.Monitor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMonitorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMonitorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLabelKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLabelAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLabelEStringParserRuleCall_3_1_0 = (RuleCall)cLabelAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTargetVarKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTargetVarAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTargetVarEStringParserRuleCall_4_1_0 = (RuleCall)cTargetVarAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Monitor returns Monitor:
		//    {Monitor}
		//    'Monitor'
		//    '{'
		//        ('label' label=EString)?
		//        ('targetVar' targetVar=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Monitor}
		//'Monitor'
		//'{'
		//    ('label' label=EString)?
		//    ('targetVar' targetVar=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Monitor}
		public Action getMonitorAction_0() { return cMonitorAction_0; }
		
		//'Monitor'
		public Keyword getMonitorKeyword_1() { return cMonitorKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('label' label=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'label'
		public Keyword getLabelKeyword_3_0() { return cLabelKeyword_3_0; }
		
		//label=EString
		public Assignment getLabelAssignment_3_1() { return cLabelAssignment_3_1; }
		
		//EString
		public RuleCall getLabelEStringParserRuleCall_3_1_0() { return cLabelEStringParserRuleCall_3_1_0; }
		
		//('targetVar' targetVar=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'targetVar'
		public Keyword getTargetVarKeyword_4_0() { return cTargetVarKeyword_4_0; }
		
		//targetVar=EString
		public Assignment getTargetVarAssignment_4_1() { return cTargetVarAssignment_4_1; }
		
		//EString
		public RuleCall getTargetVarEStringParserRuleCall_4_1_0() { return cTargetVarEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DisplayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.Display");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDisplayAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDisplayKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDisplayNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDisplayNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDisplayNameEStringParserRuleCall_3_1_0 = (RuleCall)cDisplayNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDisplayTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDisplayTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDisplayTypeEStringParserRuleCall_4_1_0 = (RuleCall)cDisplayTypeAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Display returns Display:
		//    {Display}
		//    'Display'
		//    '{'
		//        ('displayName' displayName=EString)?
		//        ('displayType' displayType=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Display}
		//'Display'
		//'{'
		//    ('displayName' displayName=EString)?
		//    ('displayType' displayType=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Display}
		public Action getDisplayAction_0() { return cDisplayAction_0; }
		
		//'Display'
		public Keyword getDisplayKeyword_1() { return cDisplayKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('displayName' displayName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'displayName'
		public Keyword getDisplayNameKeyword_3_0() { return cDisplayNameKeyword_3_0; }
		
		//displayName=EString
		public Assignment getDisplayNameAssignment_3_1() { return cDisplayNameAssignment_3_1; }
		
		//EString
		public RuleCall getDisplayNameEStringParserRuleCall_3_1_0() { return cDisplayNameEStringParserRuleCall_3_1_0; }
		
		//('displayType' displayType=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'displayType'
		public Keyword getDisplayTypeKeyword_4_0() { return cDisplayTypeKeyword_4_0; }
		
		//displayType=EString
		public Assignment getDisplayTypeAssignment_4_1() { return cDisplayTypeAssignment_4_1; }
		
		//EString
		public RuleCall getDisplayTypeEStringParserRuleCall_4_1_0() { return cDisplayTypeEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ExportFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.ExportFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExportFileAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cExportFileKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFileNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFileNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFileNameEStringParserRuleCall_3_1_0 = (RuleCall)cFileNameAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ExportFile returns ExportFile:
		//    {ExportFile}
		//    'ExportFile'
		//    '{'
		//        ('fileName' fileName=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ExportFile}
		//'ExportFile'
		//'{'
		//    ('fileName' fileName=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{ExportFile}
		public Action getExportFileAction_0() { return cExportFileAction_0; }
		
		//'ExportFile'
		public Keyword getExportFileKeyword_1() { return cExportFileKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('fileName' fileName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'fileName'
		public Keyword getFileNameKeyword_3_0() { return cFileNameKeyword_3_0; }
		
		//fileName=EString
		public Assignment getFileNameAssignment_3_1() { return cFileNameAssignment_3_1; }
		
		//EString
		public RuleCall getFileNameEStringParserRuleCall_3_1_0() { return cFileNameEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class InspectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.ktsv.asl.Asl.Inspector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInspectorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInspectorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cInspectorNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInspectorNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInspectorNameEStringParserRuleCall_3_1_0 = (RuleCall)cInspectorNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAgentValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAgentValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAgentValueEStringParserRuleCall_4_1_0 = (RuleCall)cAgentValueAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTypeEStringParserRuleCall_5_1_0 = (RuleCall)cTypeAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Inspector returns Inspector:
		//    {Inspector}
		//    'Inspector'
		//    '{'
		//        ('inspectorName' inspectorName=EString)?
		//        ('AgentValue' AgentValue=EString)?
		//        ('type' type=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Inspector}
		//'Inspector'
		//'{'
		//    ('inspectorName' inspectorName=EString)?
		//    ('AgentValue' AgentValue=EString)?
		//    ('type' type=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Inspector}
		public Action getInspectorAction_0() { return cInspectorAction_0; }
		
		//'Inspector'
		public Keyword getInspectorKeyword_1() { return cInspectorKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('inspectorName' inspectorName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'inspectorName'
		public Keyword getInspectorNameKeyword_3_0() { return cInspectorNameKeyword_3_0; }
		
		//inspectorName=EString
		public Assignment getInspectorNameAssignment_3_1() { return cInspectorNameAssignment_3_1; }
		
		//EString
		public RuleCall getInspectorNameEStringParserRuleCall_3_1_0() { return cInspectorNameEStringParserRuleCall_3_1_0; }
		
		//('AgentValue' AgentValue=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'AgentValue'
		public Keyword getAgentValueKeyword_4_0() { return cAgentValueKeyword_4_0; }
		
		//AgentValue=EString
		public Assignment getAgentValueAssignment_4_1() { return cAgentValueAssignment_4_1; }
		
		//EString
		public RuleCall getAgentValueEStringParserRuleCall_4_1_0() { return cAgentValueEStringParserRuleCall_4_1_0; }
		
		//('type' type=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'type'
		public Keyword getTypeKeyword_5_0() { return cTypeKeyword_5_0; }
		
		//type=EString
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_5_1_0() { return cTypeEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	
	private final ABModelElements pABModel;
	private final SpatialEntityElements pSpatialEntity;
	private final PlanElements pPlan;
	private final GlobalBlockElements pGlobalBlock;
	private final AgentBlockElements pAgentBlock;
	private final ExperimentBlockElements pExperimentBlock;
	private final EStringElements pEString;
	private final EDateElements pEDate;
	private final GlobalVariableElements pGlobalVariable;
	private final SpatialEntity_ImplElements pSpatialEntity_Impl;
	private final EIntElements pEInt;
	private final EBooleanElements pEBoolean;
	private final PolygonElements pPolygon;
	private final LineElements pLine;
	private final PointElements pPoint;
	private final Plan_ImplElements pPlan_Impl;
	private final PropertyElements pProperty;
	private final SimplePlanElements pSimplePlan;
	private final ReflexElements pReflex;
	private final ComplexePlanElements pComplexePlan;
	private final ParameterElements pParameter;
	private final OutputElements pOutput;
	private final MonitorElements pMonitor;
	private final DisplayElements pDisplay;
	private final ExportFileElements pExportFile;
	private final InspectorElements pInspector;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public AslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pABModel = new ABModelElements();
		this.pSpatialEntity = new SpatialEntityElements();
		this.pPlan = new PlanElements();
		this.pGlobalBlock = new GlobalBlockElements();
		this.pAgentBlock = new AgentBlockElements();
		this.pExperimentBlock = new ExperimentBlockElements();
		this.pEString = new EStringElements();
		this.pEDate = new EDateElements();
		this.pGlobalVariable = new GlobalVariableElements();
		this.pSpatialEntity_Impl = new SpatialEntity_ImplElements();
		this.pEInt = new EIntElements();
		this.pEBoolean = new EBooleanElements();
		this.pPolygon = new PolygonElements();
		this.pLine = new LineElements();
		this.pPoint = new PointElements();
		this.pPlan_Impl = new Plan_ImplElements();
		this.pProperty = new PropertyElements();
		this.pSimplePlan = new SimplePlanElements();
		this.pReflex = new ReflexElements();
		this.pComplexePlan = new ComplexePlanElements();
		this.pParameter = new ParameterElements();
		this.pOutput = new OutputElements();
		this.pMonitor = new MonitorElements();
		this.pDisplay = new DisplayElements();
		this.pExportFile = new ExportFileElements();
		this.pInspector = new InspectorElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.ktsv.asl.Asl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ABModel returns ABModel:
	//    'ABModel'
	//    '{'
	//        ('modelName' modelName=EString)?
	//        ('description' description=EString)?
	//        ('keywords' keywords=EString)?
	//        ('author' author=EString)?
	//        ('createOn' createOn=EDate)?
	//        'containsG' containsG=GlobalBlock
	//        'containsS' '{' containsS+=AgentBlock ( "," containsS+=AgentBlock)* '}'
	//        'containsE' '{' containsE+=ExperimentBlock ( "," containsE+=ExperimentBlock)* '}'
	//    '}';
	public ABModelElements getABModelAccess() {
		return pABModel;
	}
	
	public ParserRule getABModelRule() {
		return getABModelAccess().getRule();
	}
	
	//SpatialEntity returns SpatialEntity:
	//    SpatialEntity_Impl | Polygon | Line | Point;
	public SpatialEntityElements getSpatialEntityAccess() {
		return pSpatialEntity;
	}
	
	public ParserRule getSpatialEntityRule() {
		return getSpatialEntityAccess().getRule();
	}
	
	//Plan returns Plan:
	//    Plan_Impl | simplePlan | Reflex | ComplexePlan;
	public PlanElements getPlanAccess() {
		return pPlan;
	}
	
	public ParserRule getPlanRule() {
		return getPlanAccess().getRule();
	}
	
	//GlobalBlock returns GlobalBlock:
	//    (init?='init')?
	//    'GlobalBlock'
	//    '{'
	//        ('id' id=EInt)?
	//        'containsGl' '{' containsGl+=GlobalVariable ( "," containsGl+=GlobalVariable)* '}'
	//        'containsSE' '{' containsSE+=SpatialEntity ( "," containsSE+=SpatialEntity)* '}'
	//    '}';
	public GlobalBlockElements getGlobalBlockAccess() {
		return pGlobalBlock;
	}
	
	public ParserRule getGlobalBlockRule() {
		return getGlobalBlockAccess().getRule();
	}
	
	//AgentBlock returns AgentBlock:
	//    (init?='init')?
	//    (aspectFunction?='aspectFunction')?
	//    'AgentBlock'
	//    '{'
	//        ('nameAgent' nameAgent=EString)?
	//        ('aspectName' aspectName=EString)?
	//        ('color' color=EString)?
	//        'hasP' '{' hasP+=Plan ( "," hasP+=Plan)* '}'
	//        'hasPr' '{' hasPr+=Property ( "," hasPr+=Property)* '}'
	//    '}';
	public AgentBlockElements getAgentBlockAccess() {
		return pAgentBlock;
	}
	
	public ParserRule getAgentBlockRule() {
		return getAgentBlockAccess().getRule();
	}
	
	//ExperimentBlock returns ExperimentBlock:
	//    'ExperimentBlock'
	//    '{'
	//        ('type' type=EString)?
	//        ('expName' expName=EString)?
	//        'hasPa' '{' hasPa+=Parameter ( "," hasPa+=Parameter)* '}'
	//        'output' '{' output+=Output ( "," output+=Output)* '}'
	//    '}';
	public ExperimentBlockElements getExperimentBlockAccess() {
		return pExperimentBlock;
	}
	
	public ParserRule getExperimentBlockRule() {
		return getExperimentBlockAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EDate returns ecore::EDate:
	//    'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;
	public EDateElements getEDateAccess() {
		return pEDate;
	}
	
	public ParserRule getEDateRule() {
		return getEDateAccess().getRule();
	}
	
	//GlobalVariable returns GlobalVariable:
	//    {GlobalVariable}
	//    (init?='init')?
	//    'GlobalVariable'
	//    '{'
	//        ('gvarName' gvarName=EString)?
	//        ('type' type=EString)?
	//        ('initValue' initValue=EString)?
	//    '}';
	public GlobalVariableElements getGlobalVariableAccess() {
		return pGlobalVariable;
	}
	
	public ParserRule getGlobalVariableRule() {
		return getGlobalVariableAccess().getRule();
	}
	
	//SpatialEntity_Impl returns SpatialEntity:
	//    {SpatialEntity}
	//    'SpatialEntity'
	//    '{'
	//        ('shapeName' shapeName=EString)?
	//        ('shapePath' shapePath=EString)?
	//        ('type' type=EString)?
	//    '}';
	public SpatialEntity_ImplElements getSpatialEntity_ImplAccess() {
		return pSpatialEntity_Impl;
	}
	
	public ParserRule getSpatialEntity_ImplRule() {
		return getSpatialEntity_ImplAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//Polygon returns Polygon:
	//    {Polygon}
	//    'Polygon'
	//    '{'
	//        ('shapeName' shapeName=EString)?
	//        ('shapePath' shapePath=EString)?
	//        ('type' type=EString)?
	//    '}';
	public PolygonElements getPolygonAccess() {
		return pPolygon;
	}
	
	public ParserRule getPolygonRule() {
		return getPolygonAccess().getRule();
	}
	
	//Line returns Line:
	//    {Line}
	//    'Line'
	//    '{'
	//        ('shapeName' shapeName=EString)?
	//        ('shapePath' shapePath=EString)?
	//        ('type' type=EString)?
	//    '}';
	public LineElements getLineAccess() {
		return pLine;
	}
	
	public ParserRule getLineRule() {
		return getLineAccess().getRule();
	}
	
	//Point returns Point:
	//    {Point}
	//    'Point'
	//    '{'
	//        ('shapeName' shapeName=EString)?
	//        ('shapePath' shapePath=EString)?
	//        ('type' type=EString)?
	//    '}';
	public PointElements getPointAccess() {
		return pPoint;
	}
	
	public ParserRule getPointRule() {
		return getPointAccess().getRule();
	}
	
	//Plan_Impl returns Plan:
	//    {Plan}
	//    'Plan'
	//    '{'
	//        ('planName' planName=EString)?
	//        ('intention' intention=EString)?
	//    '}';
	public Plan_ImplElements getPlan_ImplAccess() {
		return pPlan_Impl;
	}
	
	public ParserRule getPlan_ImplRule() {
		return getPlan_ImplAccess().getRule();
	}
	
	//Property returns Property:
	//    {Property}
	//    'Property'
	//    '{'
	//        ('nameofvariable' nameofvariable=EString)?
	//        ('associateValue' associateValue=EString)?
	//        ('defaultType' defaultType=EString)?
	//    '}';
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}
	
	//simplePlan returns simplePlan:
	//    {simplePlan}
	//    'simplePlan'
	//    '{'
	//        ('planName' planName=EString)?
	//        ('returnType' returnType=EString)?
	//    '}';
	public SimplePlanElements getSimplePlanAccess() {
		return pSimplePlan;
	}
	
	public ParserRule getSimplePlanRule() {
		return getSimplePlanAccess().getRule();
	}
	
	//Reflex returns Reflex:
	//    {Reflex}
	//    (existReflex?='existReflex')?
	//    (goal?='goal')?
	//    'Reflex'
	//    '{'
	//        ('planName' planName=EString)?
	//    '}';
	public ReflexElements getReflexAccess() {
		return pReflex;
	}
	
	public ParserRule getReflexRule() {
		return getReflexAccess().getRule();
	}
	
	//ComplexePlan returns ComplexePlan:
	//    {ComplexePlan}
	//    'ComplexePlan'
	//    '{'
	//        ('planName' planName=EString)?
	//        ('returnType' returnType=EString)?
	//    '}';
	public ComplexePlanElements getComplexePlanAccess() {
		return pComplexePlan;
	}
	
	public ParserRule getComplexePlanRule() {
		return getComplexePlanAccess().getRule();
	}
	
	//Parameter returns Parameter:
	//    {Parameter}
	//    'Parameter'
	//    '{'
	//        ('paramName' paramName=EString)?
	//        ('targetVariable' targetVariable=EString)?
	//    '}';
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//Output returns Output:
	//    'Output'
	//    '{'
	//        ('id' id=EInt)?
	//        'hasM' '(' hasM+=[Monitor|EString] ( "," hasM+=[Monitor|EString])* ')'
	//        'containsD' '{' containsD+=Display ( "," containsD+=Display)* '}'
	//        'hasEF' '{' hasEF+=ExportFile ( "," hasEF+=ExportFile)* '}'
	//        'hasI' '{' hasI+=Inspector ( "," hasI+=Inspector)* '}'
	//    '}';
	public OutputElements getOutputAccess() {
		return pOutput;
	}
	
	public ParserRule getOutputRule() {
		return getOutputAccess().getRule();
	}
	
	//Monitor returns Monitor:
	//    {Monitor}
	//    'Monitor'
	//    '{'
	//        ('label' label=EString)?
	//        ('targetVar' targetVar=EString)?
	//    '}';
	public MonitorElements getMonitorAccess() {
		return pMonitor;
	}
	
	public ParserRule getMonitorRule() {
		return getMonitorAccess().getRule();
	}
	
	//Display returns Display:
	//    {Display}
	//    'Display'
	//    '{'
	//        ('displayName' displayName=EString)?
	//        ('displayType' displayType=EString)?
	//    '}';
	public DisplayElements getDisplayAccess() {
		return pDisplay;
	}
	
	public ParserRule getDisplayRule() {
		return getDisplayAccess().getRule();
	}
	
	//ExportFile returns ExportFile:
	//    {ExportFile}
	//    'ExportFile'
	//    '{'
	//        ('fileName' fileName=EString)?
	//    '}';
	public ExportFileElements getExportFileAccess() {
		return pExportFile;
	}
	
	public ParserRule getExportFileRule() {
		return getExportFileAccess().getRule();
	}
	
	//Inspector returns Inspector:
	//    {Inspector}
	//    'Inspector'
	//    '{'
	//        ('inspectorName' inspectorName=EString)?
	//        ('AgentValue' AgentValue=EString)?
	//        ('type' type=EString)?
	//    '}';
	public InspectorElements getInspectorAccess() {
		return pInspector;
	}
	
	public ParserRule getInspectorRule() {
		return getInspectorAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
